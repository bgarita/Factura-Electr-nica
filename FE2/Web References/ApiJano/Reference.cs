//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace FE2.ApiJano {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiciosSoap", Namespace="http://api.aplicacionescr.com/")]
    public partial class Servicios : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private Autenticacion autenticacionValueField;
        
        private System.Threading.SendOrPostCallback testOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConsultarDocumentoOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnviarDocumentoOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnviarMensajeReceptorOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Servicios() {
            this.Url = global::FE2.Properties.Settings.Default.FE2_ApiJano_Servicios;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public Autenticacion AutenticacionValue {
            get {
                return this.autenticacionValueField;
            }
            set {
                this.autenticacionValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event testCompletedEventHandler testCompleted;
        
        /// <remarks/>
        public event ConsultarDocumentoCompletedEventHandler ConsultarDocumentoCompleted;
        
        /// <remarks/>
        public event EnviarDocumentoCompletedEventHandler EnviarDocumentoCompleted;
        
        /// <remarks/>
        public event EnviarMensajeReceptorCompletedEventHandler EnviarMensajeReceptorCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AutenticacionValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.aplicacionescr.com/test", RequestNamespace="http://api.aplicacionescr.com/", ResponseNamespace="http://api.aplicacionescr.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string test() {
            object[] results = this.Invoke("test", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void testAsync() {
            this.testAsync(null);
        }
        
        /// <remarks/>
        public void testAsync(object userState) {
            if ((this.testOperationCompleted == null)) {
                this.testOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestOperationCompleted);
            }
            this.InvokeAsync("test", new object[0], this.testOperationCompleted, userState);
        }
        
        private void OntestOperationCompleted(object arg) {
            if ((this.testCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testCompleted(this, new testCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AutenticacionValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.aplicacionescr.com/ConsultarDocumento", RequestNamespace="http://api.aplicacionescr.com/", ResponseNamespace="http://api.aplicacionescr.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ConsultarDocumento(string clave, int EsPrueba, string UsuarioHacienda, string ClaveHacienda) {
            object[] results = this.Invoke("ConsultarDocumento", new object[] {
                        clave,
                        EsPrueba,
                        UsuarioHacienda,
                        ClaveHacienda});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ConsultarDocumentoAsync(string clave, int EsPrueba, string UsuarioHacienda, string ClaveHacienda) {
            this.ConsultarDocumentoAsync(clave, EsPrueba, UsuarioHacienda, ClaveHacienda, null);
        }
        
        /// <remarks/>
        public void ConsultarDocumentoAsync(string clave, int EsPrueba, string UsuarioHacienda, string ClaveHacienda, object userState) {
            if ((this.ConsultarDocumentoOperationCompleted == null)) {
                this.ConsultarDocumentoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConsultarDocumentoOperationCompleted);
            }
            this.InvokeAsync("ConsultarDocumento", new object[] {
                        clave,
                        EsPrueba,
                        UsuarioHacienda,
                        ClaveHacienda}, this.ConsultarDocumentoOperationCompleted, userState);
        }
        
        private void OnConsultarDocumentoOperationCompleted(object arg) {
            if ((this.ConsultarDocumentoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConsultarDocumentoCompleted(this, new ConsultarDocumentoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AutenticacionValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.aplicacionescr.com/EnviarDocumento", RequestNamespace="http://api.aplicacionescr.com/", ResponseNamespace="http://api.aplicacionescr.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode EnviarDocumento(System.Xml.XmlNode xmldocument, int EsPrueba, string CertificadoBase64, string PinCertificado, string UsuarioHacienda, string ClaveHacienda) {
            object[] results = this.Invoke("EnviarDocumento", new object[] {
                        xmldocument,
                        EsPrueba,
                        CertificadoBase64,
                        PinCertificado,
                        UsuarioHacienda,
                        ClaveHacienda});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void EnviarDocumentoAsync(System.Xml.XmlNode xmldocument, int EsPrueba, string CertificadoBase64, string PinCertificado, string UsuarioHacienda, string ClaveHacienda) {
            this.EnviarDocumentoAsync(xmldocument, EsPrueba, CertificadoBase64, PinCertificado, UsuarioHacienda, ClaveHacienda, null);
        }
        
        /// <remarks/>
        public void EnviarDocumentoAsync(System.Xml.XmlNode xmldocument, int EsPrueba, string CertificadoBase64, string PinCertificado, string UsuarioHacienda, string ClaveHacienda, object userState) {
            if ((this.EnviarDocumentoOperationCompleted == null)) {
                this.EnviarDocumentoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnviarDocumentoOperationCompleted);
            }
            this.InvokeAsync("EnviarDocumento", new object[] {
                        xmldocument,
                        EsPrueba,
                        CertificadoBase64,
                        PinCertificado,
                        UsuarioHacienda,
                        ClaveHacienda}, this.EnviarDocumentoOperationCompleted, userState);
        }
        
        private void OnEnviarDocumentoOperationCompleted(object arg) {
            if ((this.EnviarDocumentoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnviarDocumentoCompleted(this, new EnviarDocumentoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AutenticacionValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.aplicacionescr.com/EnviarMensajeReceptor", RequestNamespace="http://api.aplicacionescr.com/", ResponseNamespace="http://api.aplicacionescr.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode EnviarMensajeReceptor(System.Xml.XmlNode xmldocument, string clave, string consecutivoReceptor, string cedulaEmisorNumero, string cedulaEmisorTipo, string cedulaReceptorNumero, string cedulaReceptorTipo, string CertificadoBase64, string PinCertificado, string UsuarioHacienda, string ClaveHacienda, int EsPrueba) {
            object[] results = this.Invoke("EnviarMensajeReceptor", new object[] {
                        xmldocument,
                        clave,
                        consecutivoReceptor,
                        cedulaEmisorNumero,
                        cedulaEmisorTipo,
                        cedulaReceptorNumero,
                        cedulaReceptorTipo,
                        CertificadoBase64,
                        PinCertificado,
                        UsuarioHacienda,
                        ClaveHacienda,
                        EsPrueba});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void EnviarMensajeReceptorAsync(System.Xml.XmlNode xmldocument, string clave, string consecutivoReceptor, string cedulaEmisorNumero, string cedulaEmisorTipo, string cedulaReceptorNumero, string cedulaReceptorTipo, string CertificadoBase64, string PinCertificado, string UsuarioHacienda, string ClaveHacienda, int EsPrueba) {
            this.EnviarMensajeReceptorAsync(xmldocument, clave, consecutivoReceptor, cedulaEmisorNumero, cedulaEmisorTipo, cedulaReceptorNumero, cedulaReceptorTipo, CertificadoBase64, PinCertificado, UsuarioHacienda, ClaveHacienda, EsPrueba, null);
        }
        
        /// <remarks/>
        public void EnviarMensajeReceptorAsync(System.Xml.XmlNode xmldocument, string clave, string consecutivoReceptor, string cedulaEmisorNumero, string cedulaEmisorTipo, string cedulaReceptorNumero, string cedulaReceptorTipo, string CertificadoBase64, string PinCertificado, string UsuarioHacienda, string ClaveHacienda, int EsPrueba, object userState) {
            if ((this.EnviarMensajeReceptorOperationCompleted == null)) {
                this.EnviarMensajeReceptorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnviarMensajeReceptorOperationCompleted);
            }
            this.InvokeAsync("EnviarMensajeReceptor", new object[] {
                        xmldocument,
                        clave,
                        consecutivoReceptor,
                        cedulaEmisorNumero,
                        cedulaEmisorTipo,
                        cedulaReceptorNumero,
                        cedulaReceptorTipo,
                        CertificadoBase64,
                        PinCertificado,
                        UsuarioHacienda,
                        ClaveHacienda,
                        EsPrueba}, this.EnviarMensajeReceptorOperationCompleted, userState);
        }
        
        private void OnEnviarMensajeReceptorOperationCompleted(object arg) {
            if ((this.EnviarMensajeReceptorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnviarMensajeReceptorCompleted(this, new EnviarMensajeReceptorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.aplicacionescr.com/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://api.aplicacionescr.com/", IsNullable=false)]
    public partial class Autenticacion : System.Web.Services.Protocols.SoapHeader {
        
        private string claveField;
        
        private string usuarioField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string Clave {
            get {
                return this.claveField;
            }
            set {
                this.claveField = value;
            }
        }
        
        /// <remarks/>
        public string Usuario {
            get {
                return this.usuarioField;
            }
            set {
                this.usuarioField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void testCompletedEventHandler(object sender, testCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class testCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal testCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ConsultarDocumentoCompletedEventHandler(object sender, ConsultarDocumentoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConsultarDocumentoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConsultarDocumentoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EnviarDocumentoCompletedEventHandler(object sender, EnviarDocumentoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnviarDocumentoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnviarDocumentoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EnviarMensajeReceptorCompletedEventHandler(object sender, EnviarMensajeReceptorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnviarMensajeReceptorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnviarMensajeReceptorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591